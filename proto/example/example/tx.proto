syntax = "proto3";

package example.example;

import "amino/amino.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "example/example/params.proto";
import "example/example/user.proto";

option go_package = "example/x/example/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;
  
  // UpdateParams defines a (governance) operation for updating the module
  // parameters. The authority defaults to the x/gov module account.
  rpc UpdateParams    (MsgUpdateParams   ) returns (MsgUpdateParamsResponse   );
  rpc CreateUser      (MsgCreateUser     ) returns (MsgCreateUserResponse     );
  rpc UpdateUser      (MsgUpdateUser     ) returns (MsgUpdateUserResponse     );
  rpc DeleteUser      (MsgDeleteUser     ) returns (MsgDeleteUserResponse     );
  rpc AddCitizen      (MsgAddCitizen     ) returns (MsgAddCitizenResponse     );
  rpc AddProposal     (MsgAddProposal    ) returns (MsgAddProposalResponse    );
  rpc VoteonProposal  (MsgVoteonProposal ) returns (MsgVoteonProposalResponse );
  rpc VoteForProposal (MsgVoteForProposal) returns (MsgVoteForProposalResponse);
}
// MsgUpdateParams is the Msg/UpdateParams request type.
message MsgUpdateParams {
  option (cosmos.msg.v1.signer) =                         "authority";
  option           (amino.name) = "example/x/example/MsgUpdateParams";
  
  // authority is the address that controls the module (defaults to x/gov unless overwritten).
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // params defines the module parameters to update.
  
  // NOTE: All parameters must be supplied.
  Params params = 2 [(gogoproto.nullable) = false, (amino.dont_omitempty) = true];
}

// MsgUpdateParamsResponse defines the response structure for executing a
// MsgUpdateParams message.
message MsgUpdateParamsResponse {}

message MsgCreateUser {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string address = 2;
  uint64 balance = 3;
  string state   = 4;
  string sponsor = 5;
}

message MsgCreateUserResponse {
  uint64 id = 1;
}

message MsgUpdateUser {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
  string address = 3;
  uint64 balance = 4;
  string state   = 5;
  string sponsor = 6;
}

message MsgUpdateUserResponse {}

message MsgDeleteUser {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
}

message MsgDeleteUserResponse {}

message MsgAddCitizen {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string name    = 2;
  string desc    = 3;
  string sponsor = 4;
}

message MsgAddCitizenResponse {
  uint64 id = 1;
}

message MsgAddProposal {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  string name    = 2;
  string desc    = 3;
  uint64 votes   = 4;
}

message MsgAddProposalResponse {
  uint64 id = 1;
}

message MsgVoteonProposal {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
  uint64 votes   = 3;
}

message MsgVoteonProposalResponse {
  uint64 id = 1;
}

message MsgVoteForProposal {
  option (cosmos.msg.v1.signer) = "creator";
  string creator = 1;
  uint64 id      = 2;
  uint64 votes   = 3;
  bool   yesno   = 4;
}

message MsgVoteForProposalResponse {
  uint64 id = 1;
}

